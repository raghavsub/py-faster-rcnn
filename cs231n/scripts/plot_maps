#! /usr/bin/env python

import os
import cPickle as pickle
import matplotlib.pyplot as plt
import sys

def main():

    fig, ax = plt.subplots()
    
    for lossfunc in ['vanilla', 'robust']:

        maps = []

        for jitter in ['0', '10', '20', '30']:
            prefix = lossfunc + '_' + jitter
            if not os.path.exists(os.path.join('cs231n', 'models', prefix)):
                print('Bad arguments')
                sys.exit(1)

            net = os.path.join('output', 'cs231n', 'coco_2014_valminusminival',
                               prefix + '_iter_70000.caffemodel')
            if not os.path.exists(net):
                print('Not trained')
                sys.exit(1)

            results_file = os.path.join('output', 'cs231n', 'coco_2014_minival',
                                        prefix + '_iter_70000',
                                        'detection_results.pkl')

            with open(results_file, 'rb') as f:
                E = pickle.load(f)

            maps.append(E.stats[1])

        ax.plot([0, 10, 20, 30], maps, label=lossfunc.capitalize())
        ax.set_xlabel('% Jitter')
        ax.set_xlim(xmin=0, xmax=30)
        ax.set_xticks([0, 10, 20, 30])
        ax.set_ylabel('mAP@0.5')
        ax.set_ylim(ymin=0)
        ax.grid()
        ax.legend()

    fig.savefig(os.path.join('cs231n', 'plots', 'maps.png'))

if __name__ == '__main__':
    main()
