#! /usr/bin/env python

import cv2
import matplotlib.pyplot as plt
import random
import os

from datasets.coco import coco

def main():
    imdb = coco('valminusminival', '2014')
    idx = imdb._image_index[3]
    box = imdb._load_coco_annotation(idx)['boxes'][0]
    im = cv2.imread(imdb.image_path_from_index(idx))
    box = jitter(im, box)
    viz(im, box)

def jitter(im, box):
    r = lambda: 2 * random.random() * 0.2 - 0.2
    height, width = im.shape[0], im.shape[1]
    jitterX = r() * (box[2] - box[0])
    jitterY = r() * (box[3] - box[1])
    jitterW = r() * (box[2] - box[0])
    jitterH = r() * (box[3] - box[1])
    box[0] += jitterX
    box[1] += jitterY
    box[2] += jitterX
    box[3] += jitterY
    box[0] -= jitterW / 2
    box[1] -= jitterH / 2
    box[2] += jitterW / 2
    box[3] += jitterH / 2
    box[0:4] = [int(round(val)) for val in box[0:4]]
    if box[0] < 0:
        box[0] = 0
    if box[1] < 0:
        box[1] = 0
    if box[2] >= width:
        box[2] = width-1
    if box[3] >= height:
        box[3] = height-1
    return box

def viz(im, box):
    fig, ax = plt.subplots()
    ax.imshow(im)
    ax.add_patch(plt.Rectangle((box[0], box[1]),
                 box[2] - box[0], box[3] - box[1],
                 fill=False, edgecolor='red', linewidth=3.5))
    plt.axis('off')
    # fig.savefig(os.path.join('cs231n', 'plots', 'viz.png'))
    fig.savefig(os.path.join('cs231n', 'big_plots', 'viz.eps'), format='eps', dpi=1000)

if __name__ == '__main__':
    main()
