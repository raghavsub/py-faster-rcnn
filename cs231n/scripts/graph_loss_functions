#! /usr/bin/env python

import numpy as np
import os
import matplotlib.pyplot as plt

def main():
    x = np.linspace(-0.5, 0.5, 201)
    yl1 = [l1(item) for item in x]
    ysmooth_l1 = [smooth_l1(item) for item in x]
    yrobust_l1 = [robust_l1(item) for item in x]
    fig, ax = plt.subplots()
    ax.plot(x, yl1, color='k', label='L1 Loss')
    ax.plot(x, yrobust_l1, color='r', label='Robust L1 Loss')
    ax.plot(x, ysmooth_l1, color='b', label='Smooth L1 Loss')
    ax.set_xlabel('f(X) - y')
    ax.set_xlim(xmin=-0.5, xmax=0.5)
    plt.grid()
    plt.legend()
    fig.savefig(os.path.join('cs231n', 'plots', 'lossfuncs.png'))
    
def l1(x):
    return abs(x)

def smooth_l1(x):
    if abs(x) < 1./9:
        return 0.5 * (3 * x) ** 2
    else:
        return abs(x) - 0.5 / 9

def robust_l1(x):
    if abs(x) < 0.1:
        return 0
    else:
        return abs(x) - 0.1

if __name__ == '__main__':
    main()
